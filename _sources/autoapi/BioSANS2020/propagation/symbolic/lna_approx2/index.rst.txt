:py:mod:`BioSANS2020.propagation.symbolic.lna_approx2`
======================================================

.. py:module:: BioSANS2020.propagation.symbolic.lna_approx2

.. autoapi-nested-parse::

                      This module is the lna_approx2 module

   This module handles symbolic linear noise approximation.

   The following are the list of function in this module;

   1. subs2
   2. lna_symbolic2



Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   BioSANS2020.propagation.symbolic.lna_approx2.subs2
   BioSANS2020.propagation.symbolic.lna_approx2.lna_symbolic2



.. py:function:: subs2(zvar, cval)

   This function helps in the substitution of value to sympy Symbols

   Args:
       zvar (Symbol): sympy expression
       cval (dict): dictionary of values

   Returns:
       (Symbol): substituted expression


.. py:function:: lna_symbolic2(sp_comp, ks_dict, conc, r_dict, p_dict, stch_var, items=None, molar=False, mode=None)

   This function facilitates in the symbolic LNA computation.

   Args:
       sp_comp (dict): dictionary of appearance or position of species
           or component in the reaction tag of BioSANS topology file.

           For example;

               #REACTIONS
               A => B, kf1
               B => C, kf2

           The value of sp_comp is

               sp_comp = {'A': {0}, 'B': {0, 1}, 'C': {1}}

               A appears in first reaction with index 0
               B appears in first and second reaction with index 0, 1
               C appears in second reaction with index 1
       ks_dict (dict): dictionary of rate constant that appears in each
           reactions.

           For example;

               #REACTIONS
               A => B , 0.3        # first reaction
               B <=> C, 0.1, 0.2   # second reaction

           The value of ks_dict is

               ks_dict = {
                   0 : [0.3],      # first reaction
                   1 : [0.1, 0.2]  # second reaction
               }
       conc ([type]): [description]
       r_dict (dict): dictionary of reactant stoichiometry. For example

           r_dict = {
               0: {'A': 1},  # first reaction, coefficient of A is 1
               1: {'B': 1}   # second reaction, coefficient of B is 1
           }
       p_dict (dict): dictionary of product stoichiometry. For example

           p_dict = {
               0: {'B': 1},  # first reaction, coefficient of B is 1
               1: {'C': 1}   # second reaction, coefficient of C is 1
           }
       stch_var (numpy.ndarray): stoichiometric matrix. For example

           v_stoich = np.array([
               [   -1,           0   ]            # species A
               [    1,          -1   ]            # species B
               [    0,           1   ]            # species C
                 #1st rxn    2nd rxn
           ])
       items (list): list of [canvas, scroll_x, scroll_y]
       molar (bool, optional): If True, the units for any amount is in
           molar. Propensity will be macroscopic. Defaults to False.
       mode (str, optional): method keywords : Numeric, fofks, fofCo

   Returns:
       list: [0, 0] - not used


